parameters:
    syndic_main.menu_builder.class: Syndic\MainBundle\Menu\MenuBuilder

services:
    # KNP MENU CONFIG
    syndic_main.menu_builder:
        class: %syndic_main.menu_builder.class%
        arguments: ["@knp_menu.factory", "@doctrine.orm.entity_manager"]

    syndic_main.menu.main:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: syndic_main.menu_builder
        factory_method: createMainMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: main } # The alias is what is used to retrieve the menu


    # ADMIN :
    admin.category:
        class: Syndic\MainBundle\Admin\CategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Site, label: Cat√©gories }
        arguments: [ null, Syndic\MainBundle\Entity\Category, SonataAdminBundle:CRUD ]
        
    admin.article:
        class: Syndic\MainBundle\Admin\ArticleAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Site, label: Article }
        arguments: [ null, Syndic\MainBundle\Entity\Article, SonataAdminBundle:CRUD ]
        # calls:
            # - [ setSecurityContext, [ @security.context ] ]
            # - [ setEntityManager, [ @doctrine.orm.entity_manager ] ]
        
    admin.image:
        class: Syndic\MainBundle\Admin\ImageAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Site, label: Gallerie }
        arguments: [ null, Syndic\MainBundle\Entity\Image, SonataAdminBundle:CRUD ]
        
    admin.team:
        class: Syndic\MainBundle\Admin\TeamAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: Site, label: Equipe }
        arguments: [ null, Syndic\MainBundle\Entity\Team, SonataAdminBundle:CRUD ]    

